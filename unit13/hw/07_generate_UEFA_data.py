"""
Иногда бывает важно сгенерировать какие то табличные данные по заданным характеристикам.
К примеру, если вы будете работать тестировщиками, вам может потребоваться добавить
    в тестовую БД такой правдоподобный набор данных (покупки за сутки, набор товаров в магазине,
    распределение голосов в онлайн голосовании).

Давайте этим и займёмся!

Представим, что наша FrontEnd команда делает страницу сайта УЕФА с жеребьевкой команд
    по группам на чемпионате Европы.

Условия жеребьёвки такие:
Есть N групп.
В каждую группу попадает 1 "сильная" команда, 1 "слабая" команда и 2 "средние команды".

Задача: написать функцию generate_data, которая на вход принимает количество групп (от 4 до 16ти)
    и генерирует данные, которыми заполняет 2 таблицы:
        1. таблицу со списком команд (столбцы "номер команды", "Название", "страна", "сила команды")
        2. таблицу с результатами жеребьёвки (столбцы "номер команды", "номер группы")

Таблица с данными называется `uefa_commands` и `uefa_draw`
"""
import random
import sqlite3

s = "Абхазия Австралия Австрия Азербайджан Албания Алжир Ангола Андорра Антигуа и Барбуда Аргентина Армения " \
    "Афганистан Багамские Острова Бангладеш Барбадос Бахрейн Белиз Белоруссия Бельгия Бенин Болгария Боливия Босния и " \
    "Герцеговина Ботсвана Бразилия Бруней Буркина-Фасо Бурунди Бутан Вануату Ватикан Великобритания Венгрия Венесуэла " \
    "Восточный Тимор Вьетнам Габон Гаити Гайана Гамбия Гана Гватемала Гвинея Гвинея-Бисау Германия Гондурас " \
    "Государство Палестина Гренада Греция Грузия Дания Джибути Доминика Доминиканская Республика ДР Конго Египет " \
    "Замбия Зимбабве Израиль Индия Индонезия Иордания Ирак Иран Ирландия Исландия Испания Италия Йемен Кабо-Верде " \
    "Казахстан Камбоджа Камерун Канада Катар Кения Кипр Киргизия Кирибати Китай КНДР Колумбия Коморские Острова " \
    "Коста-Рика Кот-д'Ивуар Куба Кувейт Лаос Латвия Лесото Либерия Ливан Ливия Литва Лихтенштейн Люксембург Маврикий " \
    "Мавритания Мадагаскар Малави Малайзия Мали Мальдивские Острова Мальта Марокко Маршалловы Острова Мексика " \
    "Мозамбик Молдавия Монако Монголия Мьянма Намибия Науру Непал Нигер Нигерия Нидерланды Никарагуа Новая Зеландия " \
    "Норвегия ОАЭ Оман Пакистан Палау Панама Папуа - Новая Гвинея Парагвай Перу Польша Португалия Республика Конго " \
    "Республика Корея Россия Руанда Румыния Сальвадор Самоа Сан-Марино Сан-Томе и Принсипи Саудовская Аравия Северная " \
    "Македония Сейшельские Острова Сенегал Сент-Винсент и Гренадины Сент-Китс и Невис Сент-Люсия Сербия Сингапур " \
    "Сирия Словакия Словения Соломоновы Острова Сомали Судан Суринам США Сьерра-Леоне Таджикистан Таиланд Танзания " \
    "Того Тонга Тринидад и Тобаго Тувалу Тунис Туркмения Турция Уганда Узбекистан Украина Уругвай Федеративные Штаты " \
    "Микронезии Фиджи Филиппины Финляндия Франция Хорватия ЦАР Чад Черногория Чехия Чили Швейцария Швеция Шри-Ланка " \
    "Эквадор Экваториальная Гвинея Эритрея Эсватини Эстония Эфиопия ЮАР Южная Осетия Южный Судан Ямайка Япония "
countries = s.split()
letters = 'ABCDEFGH'

def generate_test_data(c: sqlite3.Cursor, number_of_groups: int) -> None:
    # очистка таблиц
    c.execute("DELETE FROM uefa_draw WHERE command_number > -1")
    c.execute("DELETE FROM uefa_commands WHERE command_number > -1")
    commands = []
    commands_draw = []
    for i in range(number_of_groups):
        commands.append((i * 4, f"{random.choice(letters)}{random.choice(letters)}{random.choice(letters)}", random.choice(countries), "сильная"))
        commands_draw.append((i * 4, i * 4, i + 1))
        commands.append((i * 4 + 1, f"{random.choice(letters)}{random.choice(letters)}{random.choice(letters)}", random.choice(countries), "средняя"))
        commands_draw.append((i * 4 + 1, i * 4 + 1, i + 1))
        commands.append((i * 4 + 2, f"{random.choice(letters)}{random.choice(letters)}{random.choice(letters)}", random.choice(countries), "средняя"))
        commands_draw.append((i * 4 + 2, i * 4 + 2, i + 1))
        commands.append((i * 4 + 3, f"{random.choice(letters)}{random.choice(letters)}{random.choice(letters)}", random.choice(countries), "слабая"))
        commands_draw.append((i * 4 + 3, i * 4 + 3, i + 1))

    print(commands)
    c.executemany("INSERT INTO uefa_commands VALUES(?, ?, ?, ?)", commands)

    c.executemany("INSERT INTO uefa_draw VALUES(?, ?, ?)", commands_draw)

if __name__ == "__main__":
    with sqlite3.connect("hw.db") as conn:
        cursor = conn.cursor()
        generate_test_data(cursor, 50)